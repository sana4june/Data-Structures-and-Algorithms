// https://leetcode.com/problems/reorder-list/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public void ReorderList(ListNode head) {
        if(head == null)
            return;
        ListNode fast = head;
        ListNode slow = head; 
        
        while(fast != null && fast.next != null)
        {
            fast = fast.next.next;
            slow = slow.next;
            
        }
        
        ListNode prev = null, curr = slow, temp;
        while(curr != null)
        {
            temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        
        ListNode first = head, second = prev;
        while(second.next != null)
        {
            temp = first.next;
            first.next = second;
            first= temp;
            
            temp = second.next;
            second.next = first;
            second = temp;
        }
    }
}

//https://leetcode.com/problems/binary-tree-right-side-view/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<int> RightSideView(TreeNode root) {
        IList<int> list = new List<int>();
        if(root == null)
            return list;
        Queue<TreeNode> q = new Queue<TreeNode>();
        q.Enqueue(root);
        while(q.Count() > 0)
        {
            int size = q.Count();
            for(int i = 0;i< size;++i)
            {
                TreeNode temp = q.Dequeue();
                if(i == size - 1)
                {
                    list.Add(temp.val);
                }
                
                    
                    if(temp.left != null)
                        q.Enqueue(temp.left);
                     if(temp.right != null)
                        q.Enqueue(temp.right);
                   
                
               
            }
        }
        return list;        
    }
}

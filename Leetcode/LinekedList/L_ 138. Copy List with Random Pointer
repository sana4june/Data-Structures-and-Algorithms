// https://leetcode.com/problems/copy-list-with-random-pointer/

/*
// Definition for a Node.
public class Node {
    public int val;
    public Node next;
    public Node random;
    
    public Node(int _val) {
        val = _val;
        next = null;
        random = null;
    }
}
*/

public class Solution {
    public Node CopyRandomList(Node head) {
        if(head == null)
        {
            return null;
        }
        Node temp = head;
        while(temp != null)
        {
            Node t = new Node(temp.val);
            t.next = temp.next;
            temp.next = t;
            temp = t.next;
        }
        
        temp = head;
        
        while(temp != null)
        {
            temp.next.random = (temp.random != null) ? temp.random.next : null;
            temp = temp.next.next;
        }
        
        Node p_oldList = head;
        Node p_newList = head.next;
        Node p_oldHead = head.next;
        while(p_oldList != null)
        {
            p_oldList.next = p_oldList.next.next;
            p_newList.next = (p_newList.next != null) ? p_newList.next.next : null;
            p_oldList = p_oldList.next;
            p_newList = p_newList.next;
        }
        return p_oldHead;
        
    }
}
